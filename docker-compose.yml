services:
  app:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    image: otboo-app:latest
    restart: unless-stopped
    env_file:
      - ./.env.docker
    expose:
      - "8080"
    depends_on:
      - redis
      - db
    networks:
      - otboo-network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - otboo-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:17-alpine
    container_name: otboo-db
    env_file:
      - ./.env.docker
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - otboo-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: otboo-nginx
    depends_on:
      - app
    ports:
      - "3000:80"
    volumes:
      - ./src/main/resources/static:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - otboo-network

volumes:
  postgres-data:
  redis-data:

networks:
  otboo-network:
    driver: bridge

# nginx:1.29-alpine > /etc/nginx/nginx.conf based
user  nginx;

worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout  65;

    # Re-resolve Docker service DNS entries (multi-instance friendly)
    resolver 127.0.0.11 ipv6=off valid=30s;

    # 기본 라운드로빈 방식 (순차적으로 분산)
    upstream backend_roundrobin {
        zone backend_roundrobin 64k;
        server app:8080 resolve;
        keepalive 32;
    }

    # 최소 연결수 방식 (가장 적게 연결된 서버에 분산)
    upstream backend_least {
        zone backend_least 64k;
        least_conn;
        server app:8080 resolve;
        keepalive 32;
    }

    # 클라이언트 IP 해시 방식 (같은 IP는 항상 같은 서버로 분산)
    upstream backend_ip {
        zone backend_ip 64k;
        ip_hash;
        server app:8080 resolve;
        keepalive 32;
    }

    # 가중치 기반 방식 (서버별 처리량 비율 조정)
    upstream backend_weight {
        zone backend_weight 64k;
        server app:8080 weight=2 resolve;
        keepalive 32;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        server_name _;

        root /usr/share/nginx/html;
        index index.html;

        location /api/sse {
            proxy_pass         http://backend_least/api/sse;
            proxy_http_version 1.1;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            add_header X-Upstream-Server $upstream_addr always;
        }

        location /api/ {
            proxy_pass         http://backend_least/api/;
            proxy_http_version 1.1;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            add_header X-Upstream-Server $upstream_addr always;
        }

        location /ws/ {
            proxy_pass         http://backend_least/ws/;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection $connection_upgrade;
            proxy_set_header   Host $host;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            add_header X-Upstream-Server $upstream_addr always;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}
